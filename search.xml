<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>dayjs源码解析</title>
      <link href="2021/05/18/dayjs-yuan-ma-jie-xi/"/>
      <url>2021/05/18/dayjs-yuan-ma-jie-xi/</url>
      
        <content type="html"><![CDATA[<p>本文内容基于<code>day.js</code>的<code>v1.10.4</code>版本，将主要从基础理念、工程架构、代码结构、插件体系和国际化体系来解析dayjs源码。</p><h2 id="基础理念"><a href="#基础理念" class="headerlink" title="基础理念"></a>基础理念</h2><p><code>dayjs</code>是国内饿了么团队<code>iamkun</code>大佬开发，同时他也是<code>Element UI</code>的核心开发者。<code>dayjs</code>首次发布在2018年4月，开发初衷就是为了对标<code>momentjs</code>从而取代它，因此API的设计与<code>momentjs</code>完全一致。正如作者所说：</p><blockquote><p>Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. If you use Moment.js, you already know how to use Day.js.</p></blockquote><p>那<code>dayjs</code>究竟解决了哪些<code>momentjs</code>的痛点？又是通过什么方式解决的呢？看完全文应该就会有答案。</p><h2 id="工程架构"><a href="#工程架构" class="headerlink" title="工程架构"></a>工程架构</h2><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>通过<code>package.json</code>可以看到项目引入了<code>babel</code>用于兼容性转化，使用<code>karma</code>和<code>SauceLabs</code>进行浏览器兼容性测试，确保浏览器兼容性。另外使用<code>cross-env</code>确保<code>npm scripts</code>运行命令的兼容性。</p><h3 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h3><p><code>dayjs</code>为了确保最终打包大小在宣传的<code>2kb</code>，在项目引入了<code>size-limit</code>和<code>gzip-size-cli</code>，用于死守<code>2.99kb</code>大小的底线。当然，确保大小更重要的还是代码层面的设计，将<code>国际化体系</code>和<code>插件体系</code>独立在核心之外，这个在后面会有介绍。</p><h3 id="Typescript支持"><a href="#Typescript支持" class="headerlink" title="Typescript支持"></a>Typescript支持</h3><p><code>dayjs</code>使用<code>javascript</code>进行开发，为了支持<code>Typescript</code>，单独书写了各种类型和接口定义，放置在<code>types</code>文件夹下。</p><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p><code>dayjs</code>主要使用<code>jest</code>进行单元测试，需要关注的是开发依赖里面包含<code>moment</code>和<code>moment-timezone</code>，安装这两个包主要是为了进行两者API一致性的单元测试。另外<code>mockdate</code>这个包是用于修改当前时间进行单元测试使用。</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><code>dayjs</code>使用<code>rollup</code>进行打包压缩，并使用<code>ncp</code>进行代码拷贝输出结果。</p><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><p>代码规范使用<code>eslint</code>和<code>prettier</code>来保障，<code>eslint</code>主要采用<code>airbnb</code>规范以优化<code>js</code>代码格式规范，<code>prettier</code>用于优化<code>markdown</code>文档格式规范。在提交代码时，使用<code>pre-commit</code>进行规范检测，确保提交的代码符合规范。</p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>版本发布使用<a href="https://travis-ci.com/"><code>Travis CI</code></a>进行，在提交代码时将安装<code>codecov</code>，执行规范检测，单元测试和代码代码覆盖率检测。发布时需要将代码合并到<code>master</code>分支，安装<code>@semantic-release/changelog</code> 、<code>@semantic-release/git</code>、<code>semantic-release</code>用于生成<code>CHANGELOG.md</code>代码变更记录，同时会执行单元测试，打包发布等流程。</p><h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><p><code>dayjs</code>的特点就是小而全，它的代码结构也非常简单，主要包含以下几个部分：</p><pre class="line-numbers language-none"><code class="language-none">src  ├── constant.js // 常量定义  ├── index.js    // 入口文件  ├── locale      // 国际化配置  ├── plugin      // 插件  └── utils.js    // 工具函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>入口文件<code>index.js</code>前三行代码引入了<code>constant.js</code>、<code>locale/en.js</code>、<code>utils.js</code>，因此我们先看看这几个文件：</p><h3 id="常量定义：constant-js"><a href="#常量定义：constant-js" class="headerlink" title="常量定义：constant.js"></a>常量定义：constant.js</h3><p>这个文件主要包含一些常量定义：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 单位转换的命名可以学习：</span><span class="token comment">// 秒数转换</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SECONDS_A_MINUTE</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SECONDS_A_HOUR</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_MINUTE</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SECONDS_A_DAY</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_HOUR</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SECONDS_A_WEEK</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_DAY</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token comment">// 毫秒数转换</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MILLISECONDS_A_SECOND</span> <span class="token operator">=</span> <span class="token number">1e3</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MILLISECONDS_A_MINUTE</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_MINUTE</span> <span class="token operator">*</span> <span class="token constant">MILLISECONDS_A_SECOND</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MILLISECONDS_A_HOUR</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_HOUR</span> <span class="token operator">*</span> <span class="token constant">MILLISECONDS_A_SECOND</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MILLISECONDS_A_DAY</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_DAY</span> <span class="token operator">*</span> <span class="token constant">MILLISECONDS_A_SECOND</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MILLISECONDS_A_WEEK</span> <span class="token operator">=</span> <span class="token constant">SECONDS_A_WEEK</span> <span class="token operator">*</span> <span class="token constant">MILLISECONDS_A_SECOND</span><span class="token comment">// 单位名称</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MS</span> <span class="token operator">=</span> <span class="token string">'millisecond'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">S</span> <span class="token operator">=</span> <span class="token string">'second'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">MIN</span> <span class="token operator">=</span> <span class="token string">'minute'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">H</span> <span class="token operator">=</span> <span class="token string">'hour'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">D</span> <span class="token operator">=</span> <span class="token string">'day'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">W</span> <span class="token operator">=</span> <span class="token string">'week'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">M</span> <span class="token operator">=</span> <span class="token string">'month'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">Q</span> <span class="token operator">=</span> <span class="token string">'quarter'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">Y</span> <span class="token operator">=</span> <span class="token string">'year'</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">DATE</span> <span class="token operator">=</span> <span class="token string">'date'</span><span class="token comment">// ISO 8601默认时间字符串：2021-05-18T13:56:28Z</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">FORMAT_DEFAULT</span> <span class="token operator">=</span> <span class="token string">'YYYY-MM-DDTHH:mm:ssZ'</span><span class="token comment">// 无效时间返回值，new Date('Invalid Date')的返回值</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">INVALID_DATE_STRING</span> <span class="token operator">=</span> <span class="token string">'Invalid Date'</span><span class="token comment">// 解析ISO 8601时间字符串，根据捕获的索引可以得到对应的值</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">REGEX_PARSE</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 解析时间格式字符串，返回相应的时间格式</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">REGEX_FORMAT</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="国际化配置：locale"><a href="#国际化配置：locale" class="headerlink" title="国际化配置：locale"></a>国际化配置：locale</h3><h4 id="en-js"><a href="#en-js" class="headerlink" title="en.js"></a>en.js</h4><p>由于默认使用<code>en</code>作为<code>locale</code>，原生API也是使用<code>en</code>输出，因此<code>en.js</code>只配置了部分参数：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// English [en]</span><span class="token comment">// We don't need weekdaysShort, weekdaysMin, monthsShort in en.js locale</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token operator">:</span> <span class="token string">'en'</span><span class="token punctuation">,</span>  weekdays<span class="token operator">:</span> <span class="token string">'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  months<span class="token operator">:</span> <span class="token string">'January_February_March_April_May_June_July_August_September_October_November_December'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="zh-cn-js"><a href="#zh-cn-js" class="headerlink" title="zh-cn.js"></a>zh-cn.js</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Chinese (China) [zh-cn]</span><span class="token keyword">import</span> dayjs <span class="token keyword">from</span> <span class="token string">'dayjs'</span><span class="token keyword">const</span> locale <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token operator">:</span> <span class="token string">'zh-cn'</span><span class="token punctuation">,</span>  weekdays<span class="token operator">:</span> <span class="token string">'星期日_星期一_星期二_星期三_星期四_星期五_星期六'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  weekdaysShort<span class="token operator">:</span> <span class="token string">'周日_周一_周二_周三_周四_周五_周六'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  weekdaysMin<span class="token operator">:</span> <span class="token string">'日_一_二_三_四_五_六'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  months<span class="token operator">:</span> <span class="token string">'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  monthsShort<span class="token operator">:</span> <span class="token string">'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function-variable function">ordinal</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> period</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>period<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token string">'W'</span><span class="token operator">:</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">周</span><span class="token template-punctuation string">`</span></span>      <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">日</span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  weekStart<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  yearStart<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>  formats<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token constant">LT</span><span class="token operator">:</span> <span class="token string">'HH:mm'</span><span class="token punctuation">,</span>    <span class="token constant">LTS</span><span class="token operator">:</span> <span class="token string">'HH:mm:ss'</span><span class="token punctuation">,</span>    <span class="token constant">L</span><span class="token operator">:</span> <span class="token string">'YYYY/MM/DD'</span><span class="token punctuation">,</span>    <span class="token constant">LL</span><span class="token operator">:</span> <span class="token string">'YYYY年M月D日'</span><span class="token punctuation">,</span>    <span class="token constant">LLL</span><span class="token operator">:</span> <span class="token string">'YYYY年M月D日Ah点mm分'</span><span class="token punctuation">,</span>    <span class="token constant">LLLL</span><span class="token operator">:</span> <span class="token string">'YYYY年M月D日ddddAh点mm分'</span><span class="token punctuation">,</span>    l<span class="token operator">:</span> <span class="token string">'YYYY/M/D'</span><span class="token punctuation">,</span>    ll<span class="token operator">:</span> <span class="token string">'YYYY年M月D日'</span><span class="token punctuation">,</span>    lll<span class="token operator">:</span> <span class="token string">'YYYY年M月D日 HH:mm'</span><span class="token punctuation">,</span>    llll<span class="token operator">:</span> <span class="token string">'YYYY年M月D日dddd HH:mm'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  relativeTime<span class="token operator">:</span> <span class="token punctuation">{</span>    future<span class="token operator">:</span> <span class="token string">'%s内'</span><span class="token punctuation">,</span>    past<span class="token operator">:</span> <span class="token string">'%s前'</span><span class="token punctuation">,</span>    s<span class="token operator">:</span> <span class="token string">'几秒'</span><span class="token punctuation">,</span>    m<span class="token operator">:</span> <span class="token string">'1 分钟'</span><span class="token punctuation">,</span>    mm<span class="token operator">:</span> <span class="token string">'%d 分钟'</span><span class="token punctuation">,</span>    h<span class="token operator">:</span> <span class="token string">'1 小时'</span><span class="token punctuation">,</span>    hh<span class="token operator">:</span> <span class="token string">'%d 小时'</span><span class="token punctuation">,</span>    d<span class="token operator">:</span> <span class="token string">'1 天'</span><span class="token punctuation">,</span>    dd<span class="token operator">:</span> <span class="token string">'%d 天'</span><span class="token punctuation">,</span>    <span class="token constant">M</span><span class="token operator">:</span> <span class="token string">'1 个月'</span><span class="token punctuation">,</span>    <span class="token constant">MM</span><span class="token operator">:</span> <span class="token string">'%d 个月'</span><span class="token punctuation">,</span>    y<span class="token operator">:</span> <span class="token string">'1 年'</span><span class="token punctuation">,</span>    yy<span class="token operator">:</span> <span class="token string">'%d 年'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function-variable function">meridiem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">hour<span class="token punctuation">,</span> minute</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> hm <span class="token operator">=</span> <span class="token punctuation">(</span>hour <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> minute    <span class="token keyword">if</span> <span class="token punctuation">(</span>hm <span class="token operator">&lt;</span> <span class="token number">600</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token string">'凌晨'</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hm <span class="token operator">&lt;</span> <span class="token number">900</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token string">'早上'</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hm <span class="token operator">&lt;</span> <span class="token number">1100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token string">'上午'</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hm <span class="token operator">&lt;</span> <span class="token number">1300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token string">'中午'</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hm <span class="token operator">&lt;</span> <span class="token number">1800</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token string">'下午'</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string">'晚上'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>dayjs<span class="token punctuation">.</span><span class="token function">locale</span><span class="token punctuation">(</span>locale<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> locale<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 源码解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间</title>
      <link href="2021/05/14/shi-jian/"/>
      <url>2021/05/14/shi-jian/</url>
      
        <content type="html"><![CDATA[<p>本文主要是想总结时间相关的知识，包括基础概念、原生API、流行的时间处理库。</p><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><h3 id="GMT：格林威治时间"><a href="#GMT：格林威治时间" class="headerlink" title="GMT：格林威治时间"></a>GMT：格林威治时间</h3><p>GMT（Greenwich Mean Time），一般称为格林威治时间或格林尼治时间，也叫世界时（Universal Time）或世界标准时间。是指位于<strong>英国伦敦</strong>郊区的<strong>皇家格林尼治天文台</strong>的标准时间，是<strong>本初子午线</strong>上的地方时，是<strong>0时区</strong>的区时。</p><h4 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h4><p>地球自西向东转，处于东边的地方比西边的地方早见到太阳，因此东边比西边时间早。以本初子午线为中心，按照地球自转方向，每隔经度15°划分一个时区的方法，全球共分为24个时区：东1区至东12区，西1区至西12区，其中东西12区跨度都是7.5°也叫半时区。每个时区之间时间相隔1个小时，因此当前时间和GMT时间的相差计算公式为：</p><pre class="line-numbers language-none"><code class="language-none">本时区时间 = GMT时间 + 时区差（东N时区+N，西N时区-N）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="中国时区"><a href="#中国时区" class="headerlink" title="中国时区"></a>中国时区</h4><p>中国境内一般统一使用东八区区时，即我们常听到的北京时间。实际上中国在地理上覆盖了东五区到东九区，因此境内有四个小时的时差，可能东部已经深夜，西部才刚傍晚。虽然如此，为了方便沟通，中国统一使用首都北京所在的东八区所在的区时作为统一时间。</p><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>HTTP传输日期和时间戳信息使用GMT作为标准，浏览器会自动转化。现行HTTP1.1的时间格式为：</p><pre class="line-numbers language-none"><code class="language-none">date: Mon, 17 May 2021 03:07:34 GMT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对于HTTP来说，GMT和UTC是等价的。</p><h3 id="UTC：世界标准时间"><a href="#UTC：世界标准时间" class="headerlink" title="UTC：世界标准时间"></a>UTC：世界标准时间</h3><p>UTC（Coordinated Universal Time），一般称为世界标准时间，或协调世界时、国际协调时间、世界统一时间，由于英文（CUT）和法文（TUC）缩写不同，作为妥协，简称UTC。UTC以<strong>原子时</strong>作为计量时间的单位，计算结果极为精密，误差值必须保持在0.9秒以内，大于0.9秒将通过<strong>闰秒</strong>来解决。</p><h4 id="原子时"><a href="#原子时" class="headerlink" title="原子时"></a>原子时</h4><p>IAT（international atomic time），称为原子时，是以物质的原子内部发射的电磁振荡频率为基准的时间计量系统。美国的物理实验市在2014年造出了人类历史上最精确的原子钟，<strong>50亿年误差1s</strong>。中国的铯原子钟也能确保2000万年误差不超过1s。</p><h4 id="与GMT的区别"><a href="#与GMT的区别" class="headerlink" title="与GMT的区别"></a>与GMT的区别</h4><p>GMT根据地球自转和公转来计算时间，而地球本身是椭圆，公转的轨道也是椭圆的，造成每天、每年的长短都不一样，误差就容易造成不精准，因此需要一个稳定精准的标准。</p><p>在UTC标准里面，一天恒定24小时，即86400秒。因此在UTC出现后，GMT称为格林威治时间而不是世界标准时间更合适，UTC才是新的世界标准时间。</p><h4 id="与GMT的联系"><a href="#与GMT的联系" class="headerlink" title="与GMT的联系"></a>与GMT的联系</h4><p>GMT实际上只是一个区时，即0时区的时间，在不需要精确到秒的情况下可视为相同，但两者的实际定义和实现是完全不一样的。</p><h4 id="UTC偏移量"><a href="#UTC偏移量" class="headerlink" title="UTC偏移量"></a>UTC偏移量</h4><p>时间日期联盟组织给世界主要国家和城市都起了一个<code>Time Zone Name</code> 方便沟通，其中中国一般使用<code>CST</code>。而本地时间的计算公式为：</p><pre class="line-numbers language-none"><code class="language-none">本地时间 = UTC标准时间 + 偏移量N<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>偏移量可以表示为<code>UTC -</code> 或 <code>UTC +</code> ，后面接<code>小时数</code> 、<code>分钟数</code> 。如：UTC +9:30表示澳大利亚中央标准时间，UTC +8表示中国标准时间。偏移量常见的表示形式有：<code>±[hh]:[mm]</code>、<code>±[hh][mm]</code>、<code>±[hh]</code>这三种方式均可。</p><p>举个例子：现在UTC时间是<code>10:30z</code>（z表示偏移量=0），那么北京时间现在若是<code>16:30 +0800</code>（下午4点半），对应的纽约时间就是<code>05:30 -0500</code>（早上5点半）。</p><h3 id="ISO-8601：国际标准日期时间表示法"><a href="#ISO-8601：国际标准日期时间表示法" class="headerlink" title="ISO 8601：国际标准日期时间表示法"></a>ISO 8601：国际标准日期时间表示法</h3><p>ISO（International Standard Organization）国际化标准组织制定的日期和时间的标准， 全称为《数据存储和交换形式·信息交换·日期和时间的表示方法》。目前最新为第三版ISO8601:2004，第一版为ISO8601:1988，第二版为ISO8601:2000。 它规定了日期时间的各种表示方法，它的一般原则：</p><ul><li>日期和时间值按从最大到最小的时间单位排序：年，月（或周），日，小时，分钟，秒和秒的分数。因此，表示的字典顺序对应于时间顺序，除了涉及负年份的日期表示。这允许日期自然地由例如文件系统排序。</li><li>每个日期和时间值都有一个固定的位数，必须用<strong>前导零填充</strong>。</li><li>日期时间表示只能有数字或少数特殊字符组成（如“ - ”，“：”，“T”，“W”和“Z”），不允许出现地方写法，如“1月”或“星期四”等。</li><li>表示可以采用两种格式之一完成 - 具有最少数量分隔符的基本格式或添加了分隔符的扩展格式以增强人类可读性。该标准指出“应以纯文本形式避免使用基本格式”。日期值（年，月，周和日）之间使用的分隔符是连字符，而冒号用作时间值（小时，分钟和秒）之间的分隔符。例如，2021年第5个月的第6天可以以扩展格式写为“2021-05-06”，或者以基本格式简称为“20210506”而不含糊不清。</li><li>为了降低准确度，可以从任何日期和时间表示中删除任意数量的值，但是从最小到最重要的顺序。例如，“2021-05”是有效的ISO 8601日期，表示2021年5月（第5个月）。此格式永远不会代表2021年未指定月份的第5天，也不代表从2021年进入2022年。</li><li>ISO 8601使用24小时制。HH:MM:SS.SSS，HH:MM:SS，HH:MM，HH为合规的时间格式。</li><li>如果没有指定与UTC关系则假定是本地时间，为安全的跨时区通讯，应制定与UTC关系。若时间是UTC则在时间后面加Z表示，如“09:30UTC”表示为09：30Z”或“0930Z”。其它时区时间则将与UTC的偏移量附加到时间后面，格式为±[hh]：[mm]，±[hh] [mm]或±[hh]，如“北京时间09:30”表示为”09:30+08:00”或“ 09:30+0800 ” 或“ 09:30+08 ”。</li><li>用字母T分割日期和时间。如20210517T124426Z或2021-05-17T12:44:26Z 。有些后台返回值会出现这种情况，需要注意。</li></ul><h3 id="DST：夏令时"><a href="#DST：夏令时" class="headerlink" title="DST：夏令时"></a>DST：夏令时</h3><p>DST（Daylight Saving Time）夏令时，表示为了节约能源，人为规定时间的意思。也叫夏时制，夏时令，又称“日光节约时制”和“夏令时间”，在这一制度实行期间所采用的统一时间称为“夏令时间”。一般在天亮早的夏季人为将时间调快一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。各个采纳夏时制的国家具体规定不同。全世界有近110个国家每年要实行夏令时。有一定节约能源效果，但是繁琐，对低纬度无意义。</p><h3 id="Timestamp：时间戳"><a href="#Timestamp：时间戳" class="headerlink" title="Timestamp：时间戳"></a>Timestamp：时间戳</h3><p>时间戳一般指的UNIX时间，或类UNIX系统（比如Linux、MacOS等）使用的时间表示方式。定义为：从UTC时间的<code>1970-1-1 0:0:0</code>起到现在的总秒数（秒是毫秒、微妙、纳秒的总称）。</p><p>当闰秒发生时，就极有可能出现同一个时间戳表示两个时刻的情况（类似时钟回拨），而且闰秒还没规律所以无法程序式的避免。因此需要一种专门的对时协议来确保：网络时间协议。</p><h4 id="NTP：网络时间协议"><a href="#NTP：网络时间协议" class="headerlink" title="NTP：网络时间协议"></a>NTP：网络时间协议</h4><p>NTP（Network Time Protocol），网络时间协议，是用来使计算机时间同步化的一种协议，它可以使计算机对其服务器或时钟源（如石英钟，GPS等等)做同步化，它可以提供<strong>高精准度</strong>的时间校正（LAN上与标准间差小于1毫秒，WAN上几十毫秒），且可介由加密确认的方式来防止恶毒的协议攻击。NTP的目的是在无序的Internet环境中提供精确和健壮的时间服务，各大操作系统（windows/Linux）对NTP都有实现。</p><h2 id="原生API：Date对象"><a href="#原生API：Date对象" class="headerlink" title="原生API：Date对象"></a>原生API：Date对象</h2><p>参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p><h3 id="创建Date对象"><a href="#创建Date对象" class="headerlink" title="创建Date对象"></a>创建Date对象</h3><p>Date对象只能通过<code>new</code> 操作符创建，若作为普通函数调用则只会返回一个字符串。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>dateString<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> monthIndex <span class="token punctuation">[</span><span class="token punctuation">,</span> day <span class="token punctuation">[</span><span class="token punctuation">,</span> hours <span class="token punctuation">[</span><span class="token punctuation">,</span> minutes <span class="token punctuation">[</span><span class="token punctuation">,</span> seconds <span class="token punctuation">[</span><span class="token punctuation">,</span> milliseconds<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="无参数"><a href="#无参数" class="headerlink" title="无参数"></a>无参数</h4><p>不传参数，则表示创建当前的时间对象。</p><h4 id="Unix时间戳"><a href="#Unix时间戳" class="headerlink" title="Unix时间戳"></a>Unix时间戳</h4><p>返回时间戳对应的时间对象。</p><h4 id="时间戳字符串"><a href="#时间戳字符串" class="headerlink" title="时间戳字符串"></a>时间戳字符串</h4><p>一个符合 <a href="https://tools.ietf.org/html/rfc2822#page-14">RFC2822</a> 或 ISO 8601 日期格式的字符串（其他格式也许也支持，但结果可能与预期不符）。</p><blockquote><p><strong>注意:</strong> 由于浏览器之间的差异与不一致性，强烈不推荐使用<code>Date</code>构造函数来解析日期字符串 (或使用与其等价的<code>Date.parse</code>)。对 RFC 2822 格式的日期仅有约定俗称的支持。 对 ISO 8601 格式的支持中，仅有日期的串 (例如 “1970-01-01”) 会被处理为 UTC 而不是本地时间，与其他格式的串的处理不同。</p></blockquote><h4 id="分别提供日期与时间的每一个成员"><a href="#分别提供日期与时间的每一个成员" class="headerlink" title="分别提供日期与时间的每一个成员"></a>分别提供日期与时间的每一个成员</h4><ul><li>year</li></ul><p>表示年份的整数值。 0到99会被映射至1900年至1999年，其它值代表实际年份。</p><ul><li>monthIndex</li></ul><p>表示月份的整数值，<strong>从 0（1月）到 11（12月）</strong>。</p><ul><li>date可选</li></ul><p>表示一个月中的第几天的整数值，从1开始。默认值为1。</p><ul><li><code>hours</code> 可选</li></ul><p>表示一天中的小时数的整数值 (24小时制)。默认值为0（午夜）。</p><ul><li><code>minutes</code> 可选</li></ul><p>表示一个完整时间（如 01:10:00）中的分钟部分的整数值。默认值为0。</p><ul><li><code>seconds</code> 可选</li></ul><p>表示一个完整时间（如 01:10:00）中的秒部分的整数值。默认值为0。</p><ul><li><code>milliseconds</code> 可选</li></ul><p>表示一个完整时间的毫秒部分的整数值。默认值为0。</p><h3 id="常用静态方法"><a href="#常用静态方法" class="headerlink" title="常用静态方法"></a>常用静态方法</h3><h4 id="Date-now"><a href="#Date-now" class="headerlink" title="Date.now()"></a>Date.now()</h4><p>返回当前时间戳</p><h4 id="Date-UTC-year-monthIndex-day-hours-minutes-seconds-milliseconds"><a href="#Date-UTC-year-monthIndex-day-hours-minutes-seconds-milliseconds" class="headerlink" title="Date.UTC(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]])"></a>Date.UTC(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]])</h4><p>转化时间为时间戳</p><h3 id="常用实例方法"><a href="#常用实例方法" class="headerlink" title="常用实例方法"></a>常用实例方法</h3><h4 id="Date-prototype-getTime"><a href="#Date-prototype-getTime" class="headerlink" title="Date.prototype.getTime()"></a>Date.prototype.getTime()</h4><p>获取时间戳</p><h4 id="Date-prototype-getFullYear"><a href="#Date-prototype-getFullYear" class="headerlink" title="Date.prototype.getFullYear()"></a>Date.prototype.getFullYear()</h4><p>返回四位数年份</p><h4 id="Date-prototype-getMonth"><a href="#Date-prototype-getMonth" class="headerlink" title="Date.prototype.getMonth()"></a>Date.prototype.getMonth()</h4><p>返回第几月份（0-11），0代表1月</p><h4 id="Date-prototype-getDate"><a href="#Date-prototype-getDate" class="headerlink" title="Date.prototype.getDate()"></a>Date.prototype.getDate()</h4><p>返回月份中的第几天（1-31）</p><h4 id="Date-prototype-getHours"><a href="#Date-prototype-getHours" class="headerlink" title="Date.prototype.getHours()"></a>Date.prototype.getHours()</h4><p>返回小时数（0-23）</p><h4 id="Date-prototype-getMinutes"><a href="#Date-prototype-getMinutes" class="headerlink" title="Date.prototype.getMinutes()"></a>Date.prototype.getMinutes()</h4><p>返回分钟（0-59）</p><h4 id="Date-prototype-getSeconds"><a href="#Date-prototype-getSeconds" class="headerlink" title="Date.prototype.getSeconds()"></a>Date.prototype.getSeconds()</h4><p>返回秒数（0-59）</p><h4 id="Date-prototype-Milliseconds"><a href="#Date-prototype-Milliseconds" class="headerlink" title="Date.prototype.Milliseconds()"></a>Date.prototype.Milliseconds()</h4><p>返回毫秒数（0-999）</p><h4 id="Date-prototype-getDay"><a href="#Date-prototype-getDay" class="headerlink" title="Date.prototype.getDay()"></a>Date.prototype.getDay()</h4><p>返回星期中的第几天（0-6），0代表周日</p><h4 id="Date-prototype-valueOf"><a href="#Date-prototype-valueOf" class="headerlink" title="Date.prototype.valueOf()"></a>Date.prototype.valueOf()</h4><p>返回时间戳</p><h2 id="流行时间处理库"><a href="#流行时间处理库" class="headerlink" title="流行时间处理库"></a>流行时间处理库</h2><p><a href="https://date-fns.org/">date-fns</a>，<a href="https://dayjs.gitee.io/zh-CN/">day.js</a>，<a href="http://momentjs.cn/">moment.js</a>作为三个最流行的时间处理库，他们的对比结果如下：<a href="https://npmcompare.com/compare/date-fns,dayjs,moment">NPMCompare</a></p><p>结论：</p><ol><li><code>moment.js</code>已确认不再高强度维护：<a href="https://momentjs.com/docs/#/-project-status/">https://momentjs.com/docs/#/-project-status/</a>，因此不推荐继续在项目中使用。</li><li><code>day.js</code> 与<code>moment.js</code> 有相同的API，能快速从<code>moment.js</code> 迁移，学习成本低，支持不可变数据、链式操作、国际化，全浏览器兼容，且仅有2kb大小，推荐使用。</li><li><code>date-fns</code> 支持模块化按需加载，体积可以最小化，若在某个工具库里面或只用到某个功能，推荐使用<code>date-fns</code>。</li><li><code>day.js</code> 适合项目中使用，特别是替换常见UI组件库的<code>moment.js</code>，<code>date-fns</code> 适合单独使用时间工具函数的场景。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 前端基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/11/hello-world/"/>
      <url>2021/05/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术漫游 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
